@page "/ProductDetails/{id:int}"          <!-- Route parameter: product ID as integer -->
@model ProductDetailsModel                <!-- PageModel class for this page -->
@{
    ViewData["Title"] = "Product Details"; <!-- Page title for layout/header -->
}

<style>
    /* Glassy container styling for main content box */
    .glassy-container {
        background: rgba(255, 255, 255, 0.2) !important;
        backdrop-filter: blur(20px) brightness(1.3);
        -webkit-backdrop-filter: blur(20px) brightness(1.3);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
        color: #000 !important;
        max-width: 700px;
        margin-left: auto;  /* Center horizontally */
        margin-right: auto;
    }

    /* Styling for the details table */
    .glassy-table {
        width: 100%;
        border-collapse: collapse;
    }

    .glassy-table th,
    .glassy-table td {
        padding: 0.75rem 1rem;
        border: 1px solid rgba(255, 255, 255, 0.4);
        background: rgba(255, 255, 255, 0.6);
        color: #111;
        font-weight: 500;
    }

    .glassy-table th {
        background: rgba(255, 255, 255, 0.85);
        font-weight: bold;
        color: #000;
    }

    /* Header for the page */
    .custom-header {
        text-align: center;
        font-size: 1.75rem;
        margin-bottom: 1rem;
        padding: 0.75rem;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 12px;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.4);
        color: #000;
    }

    /* "Add to Cart" button styling */
    .add-to-cart {
        background: cyan;
        border: none;
        color: black;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: background 0.3s ease;
    }

    .add-to-cart:hover {
        background: #00a3a3; /* Darker cyan on hover */
    }

    /* Container to center the button */
    .button-container {
        display: flex;
        justify-content: center; /* centers horizontally */
        margin-top: 20px; /* spacing above button */
    }
</style>

<h3 class="custom-header">Product Details</h3>

@if (Model.Product != null)  <!-- Check if product exists -->
{
    <div class="glassy-container">
        <!-- Product details table -->
        <table class="glassy-table">
            <tbody>
                <tr><th>ID</th><td>@Model.Product.ProductID</td></tr>
                <tr><th>Name</th><td>@Model.Product.Name</td></tr>
                <tr><th>Description</th><td>@Model.Product.Description</td></tr>
                <tr><th>Category</th><td>@Model.Product.Category</td></tr>
                <tr><th>Price</th><td>@Model.Product.Price.ToString("C")</td></tr>
                <tr><th>Illustration</th>
                    <td>
                        <img src="/images/@Model.Product.Image" 
                             alt="@Model.Product.Name" 
                             style="max-width:150px;" /> <!-- Product image -->
                    </td>
                </tr>
            </tbody>
        </table>

        <!-- Add to Cart Form -->
        <div class="button-container">
            <form asp-page="/Cart" method="post">
                <!-- Hidden inputs for product ID and return URL -->
                <input type="hidden" name="productId" value="@Model.Product.ProductID" />
                <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                <!-- Submit button -->
                <button type="submit" class="add-to-cart">Add To Cart</button>
            </form>
        </div>
    </div>
}
else
{
    <!-- Show message if product not found -->
    <p>Product not found.</p>
}
