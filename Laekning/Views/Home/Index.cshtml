@model ProductsListViewModel

@if (string.IsNullOrEmpty(Model.CurrentCategory)) {
    <!-- Display a fullscreen background image if no category is selected (homepage) -->
    <div class="homepage-banner">
        <img src="/images/molecular-illustration.jpg" alt="Medicinal Drugs">
    </div>

    <style>
        /* Fullscreen banner container */
        .homepage-banner {
            position: absolute;   /* Take full screen and stay behind content */
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;       /* Full viewport height */
            overflow: hidden;
            z-index: -1;          /* Place behind other elements */
        }

        /* Ensure image fills the container */
        .homepage-banner img {
            width: 100%;
            height: 100%;
            object-fit: cover;    /* Crop or stretch image to cover entire area */
        }
    </style>
} 
else {
    <!-- Category page with products -->
    <div class="category-page">
        <!-- Flexbox container to layout product cards -->
        <div class="products-container">
            @foreach (var p in Model.Products ?? Enumerable.Empty<Product>()) {
                <!-- Partial view for each product card -->
                <partial name="ProductSummary" model="p" />
            }
        </div>

        <!-- Pagination controls -->
        <div page-model="@Model.PagingInfo" page-action="Index" 
             page-classes-enabled="true" page-class="btn-custom" 
             page-class-normal="btn-outline-dark"
             page-class-selected="btn-primary"
             page-url-category="@Model.CurrentCategory!" 
             class="btn-group pull-right m-1">
        </div>
    </div>

    <style>
        /* Background for category pages */
        body {
            background-image: url('/images/molecular-illustration.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }

        /* Flex container for product cards */
        .products-container {
            display: flex;          /* Arrange items side by side */
            flex-wrap: wrap;        /* Wrap to new line if needed */
            gap: 20px;              /* Space between cards */
            justify-content: center;/* Center horizontally */
            padding: 20px;          /* Outer padding */
        }

        /* Styling for each product card */
        .product-card {
            background: rgba(0, 0, 0, 0.6); /* Semi-transparent dark background */
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            color: white;
            box-shadow: 0 4px 10px rgba(0, 255, 255, 0.3); /* Glow effect */
            backdrop-filter: blur(8px);    /* Frosted glass effect */
            transition: transform 0.3s ease, box-shadow 0.3s ease; /* Hover effects */
            max-width: 250px;              /* Card width */
            flex: 1 1 250px;               /* Flexible sizing for responsiveness */
        }
	
        /* Pagination container at the bottom */
        .btn-group {
            position: absolute;
            bottom: 20px;                  /* Distance from bottom */
            left: 50%;
            transform: translateX(-50%);   /* Center horizontally */
            z-index: 10;                    /* Above background and cards */
        }

        /* Custom button styling for pagination */
        .btn-custom {
            background: cyan;               /* Neon cyan color */
            border-radius: 8px;
            padding: 10px 15px;
            font-weight: bold;
            transition: background 0.3s ease, box-shadow 0.3s ease;
        }

        /* Hover effect for pagination buttons */
        .btn-custom:hover {
            background: rgba(0, 255, 255, 1); /* Brighter on hover */
            box-shadow: 0 0 10px rgba(0, 255, 255, 0.8); /* Glow effect */
        }
    </style>
}
